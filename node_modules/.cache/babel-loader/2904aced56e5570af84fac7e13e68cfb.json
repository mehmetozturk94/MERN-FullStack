{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter your title\").required(\"Title is required\"),\n  description: yup.string(\"Enter your description\").min(8, \"Description should be of minimum 8 characters length\").required(\"Description is required\")\n});\nconst theme = createTheme();\n\nconst NewPlace = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPlace, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/places/pages/NewPlace.js"],"names":["React","useFormik","yup","Avatar","Button","CssBaseline","TextField","Box","AddLocationAltIcon","Typography","Container","createTheme","ThemeProvider","validationSchema","object","title","string","required","description","min","theme","NewPlace","formik","initialValues","onSubmit","values","alert","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;;AAEA,MAAMC,gBAAgB,GAAGX,GAAG,CAACY,MAAJ,CAAW;AAClCC,EAAAA,KAAK,EAAEb,GAAG,CACTc,MADM,CACC,kBADD,EAENC,QAFM,CAEG,mBAFH,CAD2B;AAIlCC,EAAAA,WAAW,EAAEhB,GAAG,CACbc,MADU,CACH,wBADG,EAEVG,GAFU,CAEN,CAFM,EAEH,sDAFG,EAGVF,QAHU,CAGD,yBAHC;AAJqB,CAAX,CAAzB;AAUA,MAAMG,KAAK,GAAGT,WAAW,EAAzB;;AAEA,MAAMU,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGrB,SAAS,CAAC;AACvBsB,IAAAA,aAAa,EAAE;AACbR,MAAAA,KAAK,EAAE,EADM;AAEbG,MAAAA,WAAW,EAAE;AAFA,KADQ;AAKvBL,IAAAA,gBAAgB,EAAEA,gBALK;AAMvBW,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD;AARsB,GAAD,CAAxB;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBD;;GAAMJ,Q;UACWpB,S;;;KADXoB,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst validationSchema = yup.object({\n  title: yup\n  .string(\"Enter your title\")\n  .required(\"Title is required\"),\n  description: yup\n    .string(\"Enter your description\")\n    .min(8, \"Description should be of minimum 8 characters length\")\n    .required(\"Description is required\"),\n});\n\nconst theme = createTheme();\n\nconst NewPlace = () => {\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      Hello\n    </div>\n  );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}