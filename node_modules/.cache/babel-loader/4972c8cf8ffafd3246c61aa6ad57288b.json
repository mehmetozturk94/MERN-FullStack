{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/user/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport ErrorModal from \"../../ui/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../ui/components/UIElements/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  firstName: yup.string(\"Enter your First Name\").required(\"First Name is required\"),\n  email: yup.string(\"Enter your email\").email(\"Enter a valid email\").required(\"Email is required\"),\n  password: yup.string(\"Enter your password\").min(6, \"Password should be of minimum 6 characters length\").required(\"Password is required\")\n});\nconst theme = createTheme();\nexport default function Signup() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      firstName: \"\"\n    },\n    validationSchema: validationSchema,\n    //Request to Signup\n    //POST Method\n    onSubmit: async values => {\n      setIsLoading(true);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:3000/api/users/signup\",\n        data: JSON.stringify({\n          name: values.firstName,\n          email: values.email,\n          password: values.password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        //handle success\n        alert(\"Successfully Registered\");\n        setIsLoading(false);\n      }).catch(function (response) {\n        //handle error\n        alert(\"Not Registered\");\n        setError(response || \"Something Went Wrong, Please Try Again\");\n        setIsLoading(false);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: formik.handleSubmit,\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"given-name\",\n                  name: \"firstName\",\n                  fullWidth: true,\n                  id: \"firstName\",\n                  label: \"First Name\",\n                  autoFocus: true,\n                  value: formik.values.firstName,\n                  onChange: formik.handleChange,\n                  error: formik.touched.firstName && Boolean(formik.errors.firstName),\n                  helperText: formik.touched.firstName && formik.errors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  value: formik.values.email,\n                  onChange: formik.handleChange,\n                  error: formik.touched.email && Boolean(formik.errors.email),\n                  helperText: formik.touched.email && formik.errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  value: formik.values.password,\n                  onChange: formik.handleChange,\n                  error: formik.touched.password && Boolean(formik.errors.password),\n                  helperText: formik.touched.password && formik.errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/Signin\",\n                  variant: \"body2\",\n                  children: \"Already have an account? Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n              asOverlay: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"gl8UG3/JT1KQVFqn7bPZSvQA4X8=\", false, function () {\n  return [useFormik];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/user/pages/Signup.js"],"names":["React","useState","axios","yup","useFormik","Avatar","Button","CssBaseline","TextField","Grid","Link","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","ErrorModal","LoadingSpinner","validationSchema","object","firstName","string","required","email","password","min","theme","Signup","isLoading","setIsLoading","error","setError","formik","initialValues","onSubmit","values","method","url","data","JSON","stringify","name","headers","then","response","alert","catch","marginTop","display","flexDirection","alignItems","m","bgcolor","handleSubmit","mt","handleChange","touched","Boolean","errors","mb"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport ErrorModal from \"../../ui/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../ui/components/UIElements/LoadingSpinner\";\n\nconst validationSchema = yup.object({\n  firstName: yup\n    .string(\"Enter your First Name\")\n    .required(\"First Name is required\"),\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string(\"Enter your password\")\n    .min(6, \"Password should be of minimum 6 characters length\")\n    .required(\"Password is required\"),\n});\n\nconst theme = createTheme();\n\nexport default function Signup() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n    },\n    validationSchema: validationSchema,\n    //Request to Signup\n    //POST Method\n    onSubmit: async (values) => {\n      setIsLoading(true);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:3000/api/users/signup\",\n        data: JSON.stringify({\n          name: values.firstName,\n          email: values.email,\n          password: values.password,\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then(function (response) {\n          //handle success\n          alert(\"Successfully Registered\");\n          setIsLoading(false);\n        })\n        .catch(function (response) {\n          //handle error\n          alert(\"Not Registered\");\n          setError(response || \"Something Went Wrong, Please Try Again\");\n          setIsLoading(false);\n        });\n    },\n  });\n  return (\n    <React.Fragment>\n      <ErrorModal error={error}/>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign Up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={formik.handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"given-name\"\n                    name=\"firstName\"\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                    value={formik.values.firstName}\n                    onChange={formik.handleChange}\n                    error={\n                      formik.touched.firstName &&\n                      Boolean(formik.errors.firstName)\n                    }\n                    helperText={\n                      formik.touched.firstName && formik.errors.firstName\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={\n                      formik.touched.password && Boolean(formik.errors.password)\n                    }\n                    helperText={\n                      formik.touched.password && formik.errors.password\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"center\">\n                <Grid item>\n                  <Link href=\"/Signin\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n              {isLoading && <LoadingSpinner asOverlay />}\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}