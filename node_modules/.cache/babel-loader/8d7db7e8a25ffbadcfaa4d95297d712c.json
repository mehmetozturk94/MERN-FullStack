{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/places/pages/UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport UpdateIcon from \"@mui/icons-material/Update\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_PLACES = [{\n  id: \"p1\",\n  title: \"Empire State Building\",\n  description: \"One of the most famous sky scrapers in the world!\",\n  imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\n  address: \"20 W 34th St, New York, NY 10001\",\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: \"u1\"\n}, {\n  id: \"p2\",\n  title: \"Empire State Building\",\n  description: \"One of the most famous sky scrapers in the world!\",\n  imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\n  address: \"20 W 34th St, New York, NY 10001\",\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: \"u2\"\n}];\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter for Update title\").required(\"Title is required\"),\n  description: yup.string(\"Enter for Update description\").min(8, \"Description should be of minimum 8 characters length\").required(\"Description is required\")\n});\nconst theme = createTheme();\n\nconst UpdatePlace = () => {\n  _s();\n\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  const formik = useFormik({\n    initialValues: {\n      title: `${identifiedPlace.title}`,\n      description: `${identifiedPlace.description}`\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not find place!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(UpdateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Update Places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: formik.handleSubmit,\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"title\",\n              name: \"title\",\n              value: identifiedPlace.title,\n              style: {\n                width: 400\n              },\n              error: formik.touched.title && Boolean(formik.errors.title),\n              helperText: formik.touched.title && formik.errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              multiline: true,\n              id: \"description\",\n              name: \"description\",\n              type: \"description\",\n              rows: 4,\n              style: {\n                width: 400,\n                marginTop: 10\n              },\n              value: formik.values.description,\n              onChange: formik.handleChange,\n              error: formik.touched.description && Boolean(formik.errors.description),\n              helperText: formik.touched.description && formik.errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Update Place\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePlace, \"bHh/Mx8Uc4nZ7kbF8LoMmmaCsE8=\", false, function () {\n  return [useParams, useFormik];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"sources":["/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useParams","useFormik","yup","Avatar","Button","CssBaseline","TextField","Box","UpdateIcon","Typography","Container","createTheme","ThemeProvider","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","validationSchema","object","string","required","min","theme","UpdatePlace","placeId","identifiedPlace","find","p","formik","initialValues","onSubmit","values","alert","JSON","stringify","marginTop","display","flexDirection","alignItems","m","bgcolor","handleSubmit","mt","width","touched","Boolean","errors","handleChange","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport UpdateIcon from \"@mui/icons-material/Update\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst DUMMY_PLACES = [\n  {\n    id: \"p1\",\n    title: \"Empire State Building\",\n    description: \"One of the most famous sky scrapers in the world!\",\n    imageUrl:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\n    address: \"20 W 34th St, New York, NY 10001\",\n    location: {\n      lat: 40.7484405,\n      lng: -73.9878584,\n    },\n    creator: \"u1\",\n  },\n  {\n    id: \"p2\",\n    title: \"Empire State Building\",\n    description: \"One of the most famous sky scrapers in the world!\",\n    imageUrl:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg\",\n    address: \"20 W 34th St, New York, NY 10001\",\n    location: {\n      lat: 40.7484405,\n      lng: -73.9878584,\n    },\n    creator: \"u2\",\n  },\n];\n\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter for Update title\").required(\"Title is required\"),\n  description: yup\n    .string(\"Enter for Update description\")\n    .min(8, \"Description should be of minimum 8 characters length\")\n    .required(\"Description is required\"),\n});\n\nconst theme = createTheme();\n\nconst UpdatePlace = () => {\n\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n  const formik = useFormik({\n    initialValues: {\n      title: `${identifiedPlace.title}`,\n      description: `${identifiedPlace.description}`,\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n\n\n  if (!identifiedPlace) {\n    return (\n      <div className=\"center\">\n        <h2>Could not find place!</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <UpdateIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Update Places\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={formik.handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <hr />\n              <TextField\n                id=\"title\"\n                name=\"title\"\n                value={identifiedPlace.title}\n                style={{ width: 400 }}\n                error={formik.touched.title && Boolean(formik.errors.title)}\n                helperText={formik.touched.title && formik.errors.title}\n              />\n              <TextField\n                multiline\n                id=\"description\"\n                name=\"description\"\n                type=\"description\"\n                rows={4}\n                style={{ width: 400, marginTop: 10 }}\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Update Place\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}