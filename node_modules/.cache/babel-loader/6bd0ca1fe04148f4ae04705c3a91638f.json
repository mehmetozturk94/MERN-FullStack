{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/places/pages/NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\nimport Box from \"@mui/material/Box\";\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  title: yup.string(\"Enter your title\").required(\"Title is required\"),\n  description: yup.string(\"Enter your description\").min(8, \"Description should be of minimum 8 characters length\").required(\"Description is required\")\n});\nconst theme = createTheme();\n\nconst NewPlace = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AddLocationAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"New Places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: formik.handleSubmit,\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"title\",\n              name: \"title\",\n              placeholder: \"Please Enter Title\",\n              value: formik.values.title,\n              style: {\n                width: 400\n              },\n              onChange: formik.handleChange,\n              error: formik.touched.title && Boolean(formik.errors.title),\n              helperText: formik.touched.title && formik.errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              fullWidth: true,\n              id: \"description\",\n              name: \"description\",\n              type: \"description\",\n              placeholder: \"Please Enter Description\",\n              minRows: 3,\n              style: {\n                width: 400\n              },\n              value: formik.values.description,\n              onChange: formik.handleChange,\n              error: formik.touched.description && Boolean(formik.errors.description),\n              helperText: formik.touched.description && formik.errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPlace, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["/Users/mehmetozturk/Documents/React Projects/MERN/frontend/src/places/pages/NewPlace.js"],"names":["React","useFormik","yup","Avatar","Button","CssBaseline","TextField","TextareaAutosize","Box","AddLocationAltIcon","Typography","Container","createTheme","ThemeProvider","validationSchema","object","title","string","required","description","min","theme","NewPlace","formik","initialValues","onSubmit","values","alert","JSON","stringify","marginTop","display","flexDirection","alignItems","m","bgcolor","handleSubmit","mt","width","handleChange","touched","Boolean","errors","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\nimport Box from \"@mui/material/Box\";\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst validationSchema = yup.object({\n  title: yup\n    .string(\"Enter your title\")\n    .required(\"Title is required\"),\n  description: yup\n    .string(\"Enter your description\")\n    .min(8, \"Description should be of minimum 8 characters length\")\n    .required(\"Description is required\"),\n});\n\nconst theme = createTheme();\n\nconst NewPlace = () => {\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <AddLocationAltIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              New Places\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={formik.handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                fullWidth\n                id=\"title\"\n                name=\"title\"\n                placeholder=\"Please Enter Title\"\n                value={formik.values.title}\n                style={{ width: 400 }}\n                onChange={formik.handleChange}\n                error={formik.touched.title && Boolean(formik.errors.title)}\n                helperText={formik.touched.title && formik.errors.title}\n              />\n              <hr />\n              <TextareaAutosize\n                fullWidth\n                id=\"description\"\n                name=\"description\"\n                type=\"description\"\n                placeholder=\"Please Enter Description\"\n                minRows={3}\n                style={{ width: 400 }}\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.description &&\n                  Boolean(formik.errors.description)\n                }\n                helperText={\n                  formik.touched.description && formik.errors.description\n                }\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Submit\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}